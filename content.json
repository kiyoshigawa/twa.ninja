[
  {
    "id": "ubitx_enclosure",
    "title": "uBitX Enclosure",
    "date_publish": "2018-05-19 19:09:00",
    "body": "<p>This is an enclosure I made for the uBitX out of 1/8\" Acrylic. There's a bunch of pictures of the enclosure, and some CAD/pdf files of the enclosure for your use.</p>",
    "image": {
      "file": "/files/ubitx_enclosure/2018-05-13-11.44.38.jpg"
    },
    "image_list": [
      {
        "filename": "/files/ubitx_enclosure/2018-05-13-11.44.47.jpg",
        "title": ""
      },
      {
        "filename": "/files/ubitx_enclosure/2018-05-13-11.44.57.jpg",
        "title": ""
      },
      {
        "filename": "/files/ubitx_enclosure/2018-05-13-11.44.52.jpg",
        "title": ""
      },
      {
        "filename": "/files/ubitx_enclosure/2018-05-13-12.06.47.jpg",
        "title": ""
      },
      {
        "filename": "/files/ubitx_enclosure/2018-05-13-11.42.17.jpg",
        "title": ""
      },
      {
        "filename": "/files/ubitx_enclosure/2018-05-13-11.42.24.jpg",
        "title": ""
      },
      {
        "filename": "/files/ubitx_enclosure/2018-05-13-11.42.22.jpg",
        "title": ""
      },
      {
        "filename": "/files/ubitx_enclosure/2018-05-13-11.42.15.jpg",
        "title": ""
      }
    ],
    "file_list": [
      {
        "filename": "/files/ubitx_enclosure/1-8-right.pdf",
        "title": "1-8 Right.pdf"
      },
      {
        "filename": "/files/ubitx_enclosure/1-8-top.pdf",
        "title": "1-8 Top.pdf"
      },
      {
        "filename": "/files/ubitx_enclosure/1-8-left.pdf",
        "title": "1-8 Left.pdf"
      },
      {
        "filename": "/files/ubitx_enclosure/1-8-bottom.pdf",
        "title": "1-8 Bottom.pdf"
      },
      {
        "filename": "/files/ubitx_enclosure/1-8-front.pdf",
        "title": "1-8 Front.pdf"
      },
      {
        "filename": "/files/ubitx_enclosure/1-8-back.pdf",
        "title": "1-8 Back.pdf"
      },
      {
        "filename": "/files/ubitx_enclosure/1-16-audio-jacks.pdf",
        "title": "1-16 Audio Jacks.pdf"
      },
      {
        "filename": "/files/ubitx_enclosure/1-16-top-inside.pdf",
        "title": "1-16 Top Inside.pdf"
      },
      {
        "filename": "/files/ubitx_enclosure/ubitx-case.dwg",
        "title": "Ubitx Case.dwg"
      }
    ]
  },
  {
    "id": "nixie_clock_-_original_blog_recreated",
    "title": "Nixie Clock - Original Blog Recreated",
    "date_publish": "2010-05-12 18:00:00",
    "body": "<p>Below you will find the mostly preserved original build log for my Nixie Clock formerly posted on thetransistor.com circa 2010. I've also included my original schematics for download. (I've also included some comments in parantheses from present-day me.)</p>\n\n<p>Hello everyone. I’ve designed and built myself a Nixie Tube display, and I’m now going to impart upon the world my build log, schematics (PDF), and Arduino source code. If you have any questions or comments you can email me at tim (at) thetransistor (dot) com. (Yeah, my email is now tim (at) thisdomain these days. Also the schematics and code will be downloadable at the bottom of this page.)</p>\n\n<p><strong>Project Overview</strong><br>\nThe goal of this project was to create a nixie tube display using one of our Minimalist Arduino kits and some nixie tubes I happened to come across. It has a demo mode to test the tubes, and it also accepts serial inputs to set the display. In the future, I intend to add a second module which will have an atomic clock receiver, and use it as a wall-clock at my apartment, but that’s another story for another page. Here’s a video showing the finished product in all its glory:</p>\n\n<p><iframe allowfullscreen=\"\" frameborder=\"0\" height=\"315\" src=\"https://www.youtube.com/embed/ZxV7xbqZOcM?rel=0\" width=\"560\"></iframe></p>\n\n<p>And here’s a video with me breifly explaining it:</p>\n\n<p><iframe allowfullscreen=\"\" frameborder=\"0\" height=\"315\" src=\"https://www.youtube.com/embed/XDIwTiX1pvE?rel=0\" width=\"560\"></iframe></p>\n\n<p>(No beard! Gods, I was young back then.)</p>\n\n<p><strong>Build Log</strong></p>\n\n<p>It all began with me receiving a pile of nixie tubes abandoned at the Transistor. I resigned myself to figure out how to make a controller and eventually a clock for them.</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-0854-web.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-0854-web.jpg\"></a></div></p>\n\n<p>After doing a bit of research I bought a <a href=\"http://www.allspectrum.com/store/product_info.php?cPath=26&amp;products_id=521&amp;osCsid=cbf86a225b4b57ce278fde776f36794f&amp;sdesc=Nixie+Power+supply%2C+High+Voltage+Switch+Mode+DC-DC+Converter+Kit%2C+95-190VDC%2C+25ma+%40+180VDC+Model+%23+HV-SMPS\">DC-DC High Voltage Converter</a> from the good folks at All Spectrum Electronics ( <a href=\"http://www.allspectrum.com/\">http://www.allspectrum.com/</a> ). (The exact PSU I used is no longer available. Look for something that will take in ~12V and output ~180V DC.)</p>\n\n<p>I then ran some tests on a tube to see if I could control it with an arduino and transistors as shown in the schematics above. Here’s a video result of that test:</p>\n\n<p>You can see that PWM control of the tubes is possible, and could lead to some nifty transition effects later if I stop being so lazy about writing code for it. Anyways, with confirmation that the tubes worked with the power supply and Arduino, I set to work building my circuit, which will now be shown with a series of many many pictures and brief descriptions:</p>\n\n<p><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/N2RvvdKM2DU?rel=0\" frameborder=\"0\" allowfullscreen=\"\"></iframe></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-0928.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-0928.jpg\"></a></div></p>\n\n<p>This is a picture from an early test of a tube.</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-0959.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-0959.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-0960.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-0960.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-0961.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-0961.jpg\"></a></div></p>\n\n<p>These are me cutting out the Lexan that I will eventually use to mount the Nixie Tubes. I traced the tubes and used a scroll saw to cut out the slots. (It's funny how much easier this part would be with the laser cutter we got a couple years down the line.)</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1112.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1112.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1115.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1115.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1116.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1116.jpg\"></a></div></p>\n\n<p>These are pictures of the mounted tubes. You’ll find a pinout from the mounting bracket numbering to tube digits on the schematic drawing above. (Turned out pretty clean without a laser cutter, imo.)</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1219.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1219.jpg\"></a></div></p>\n\n<p>This was an early general idea for the board layout. You’ll note two 28-pin DIP sockets. There’s two because I originally intended to include the clock on the same board as the display, but eventually decided that I’d rather have a versatile display that’ll display anything instead of just a clock, even if that’s what it will end up doing most of the time.</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1221.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1221.jpg\"></a></div></p>\n\n<p>This shows the 20 gauge enamel-coated magnet wire I used to wire up the project. This involved a lot of work getting the enamel off of the wires for soldering. More on that in a bit.</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1321.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1321.jpg\"></a></div></p>\n\n<p>The first things I got working were a simple Minimalist Arduino kit, and the power supplies.</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1326.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1326.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1328.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1328.jpg\"></a></div></p>\n\n<p>This is a finished Minimalist Arduino on board with the FTDI connector pins working, as well as the 180V power supply circuit board.</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1332.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1332.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/1527511632_img-1333.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/1527511632_img-1333.jpg\"></a></div></p>\n\n<p>I also added an ICSP pinout in case I decide I want to use a bootloader other than the default arduino one in the future. (This came in handy this week when I was updating and getting it back to running properly. None of my FTDI chips seemed to reset the board properly, so I used the ICSP to re-program it with the latest code attached below.)</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1334.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1334.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1335.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1335.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1336.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1336.jpg\"></a></div></p>\n\n<p>I next added the 11 NPN transistor circuits, as shown here. (This was before I knew places like OSH Park existed, and also before I knew how to use circuitboard CAD programs to make PCBs. Crazy how much work I put into soldering it all manually. You'll also notice the schematic linked at the bottom of the page is drawn in AutoCAD instead of something sensible. Live and learn, I suppose.)</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1337.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1337.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1339.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1339.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1341.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1341.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1342.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1342.jpg\"></a></div></p>\n\n<p>After the NPNs I added the PNP controlled by NPN Darlington arrays to the board, and colored the PNP transistors silver on the top so I wouldn’t have to squint to see which one was NPN and which one was PNP. (That silver sharpie is awesome when working with standard black ICs for just this reason)</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1343.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1343.jpg\"></a></div></p>\n\n<p>I made the header pinouts at this point, so I could see where all the wires’d line up when connected.</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1344.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1344.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1346.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1346.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1349.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1349.jpg\"></a></div></p>\n\n<p>Next I wired all the transistor arrays to the arduino pins. It took a long time, but looked pretty cool when I finished.</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1351.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1351.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1358.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1358.jpg\"></a></div></p>\n\n<p>With the Arduino wired up, I wanted to test everything and confirm I got it right, and it turns out I did. Huzzah! However, there were miles to go before I rested. Sommat like 288 more wires to solder into place, give or take…</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1360.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1360.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1361.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1361.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1363.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1363.jpg\"></a></div></p>\n\n<p>I next wired all the header pins. I really like the way the arched wires turned out.</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1365.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1365.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1366.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1366.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1367.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1367.jpg\"></a></div></p>\n\n<p>For those interested in how I ground the enamel off all the wires, you can see my dremel apparatus here, which I used to grind the piles of wires used on this project so that they could be soldered. Are there better ways? Probably, but this worked. (In hindsight I should have gotten a lighter and burned it all off.)</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1370.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1370.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1371.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1371.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1372.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1372.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1373.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1373.jpg\"></a></div></p>\n\n<p>I then ground and soldered 144 more wire ends to the tubes and headers. I also tested often to make troubleshooting problems easier. (These were a bit messier than I originally planned, but I didn't use something like rainbow wire or chopped up IDE cables because I was sold on the enamel wire look.)</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1374.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1374.jpg\"></a></div></p>\n\n<p>While soldering to the headers, I found a handy method: I took aligator clips, and attached them to the wires that I had already soldered to hold the next wire in place as shown above. It was much easier than trying to set up my helping hands every pin. Food for thought.</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1377.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1377.jpg\"></a></div></p>\n\n<p>VICTORY! The circuit worked, and I got all the transistors to function. See the video below for my test run of just the working circuit. The rest is more or less just aesthetics, which were important to me for this project. Oh, and programming. Still had plenty of that to do.</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1378.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1378.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1379.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1379.jpg\"></a></div></p>\n\n<p>Here’s the assembly pics going on. You can see the stained wood, and some last minute additions to the board (the switch, the brass screws used as pinouts, etc.) piling up. (Ugh, stained oak, with no protective finish. The current woodworking me is still unhappy about that, but it's highly unlikely I'll disassemble the whole clock at this point to replace it with something nicer.)</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1380.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1380.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1382.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1382.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1383.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1383.jpg\"></a></div></p>\n\n<p>In the end, everything finally came together. The hardware was done, and only software was left. See the videos at the top for the final product.</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/nixie_clock_-_original_blog_recreated/img-1385.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/nixie_clock_-_original_blog_recreated/img-1385.jpg\"></a></div></p>\n\n<p>With the software finished, the world was my oyster, and the nixie-tube display was complete. Huzzah! (Except for the part where it worked only briefly as a clock, then was used as a countdown timer for a couple New Year's parties, then sat on a shelf collecting a lot of dust for 5-7 years, and only now is it finally returned to being a clock.)</p>",
    "image": {
      "file": "/files/nixie_clock_-_original_blog_recreated/2018-05-28-06.34.39.jpg"
    },
    "image_list": [],
    "file_list": [
      {
        "filename": "/files/nixie_clock_-_original_blog_recreated/nixie-clock.py",
        "title": "Server-Side Clock Python Script - Sends serial to my FTDI dongle attached to the clock."
      },
      {
        "filename": "/files/nixie_clock_-_original_blog_recreated/nixie-display-round2.pde",
        "title": "This code from 2010 turned out to still be just dandy."
      },
      {
        "filename": "/files/nixie_clock_-_original_blog_recreated/nixie-tube-display-board.pdf",
        "title": "PDF-Only Schematic Generated in AutoCAD. Sorry."
      }
    ]
  },
  {
    "id": "gorduino_-_original_blog_recreated",
    "title": "Gorduino - Original Blog Recreated",
    "date_publish": "2010-08-22 04:58:00",
    "body": "<p>This is another recreated blog post from thetransistor.com. Gordo actually did all the work on this one, but I wanted to preserve this piece of tT history on my own blog for the future.</p>\n\n<p><em><strong>Project Overview</strong></em></p>\n\n<p>The Gorduino is a PCB board layout designed to work with our Minimalist Arduino Kits. It was designed by Gordon Cooper with input from other Transistor Members. Features include:</p>\n\n<ul>\n<li>Access to all Arduino pins (D0-D13, and A0-A5)</li>\n        <li>Ground Pins adjacent to all Digital Pins</li>\n        <li>5V Rail and Ground Rail adjacent to all Analog Pins for ease of sensor use</li>\n        <li>USB/External Power Selector Jumper Pin</li>\n        <li>Single sided board for easy home reproduction</li>\n        <li>Small form factor compared to typical Arduino footprint</li>\n    </ul>\n\n<p><em><strong>Eagle Schematic Files</strong></em></p>\n\n<p><strong>Files for v0.3a (Current Version):</strong><br>\n(See download links below)</p>\n\n<p>Changes from v0.2a:</p>\n\n<ul>\n<li>Added 5V rail on analog pins.</li>\n            <li>General cleanup and trace size/position changes.</li>\n        </ul>\n<p><strong>Files for v0.2a (Zombie Defense Version):</strong><br>\n(See download links below)</p>",
    "image": {
      "file": "/files/gorduino_-_original_blog_recreated/img-1897.jpg"
    },
    "image_list": [],
    "file_list": [
      {
        "filename": "/files/gorduino_-_original_blog_recreated/gorduino-v0.2a.zip",
        "title": "2018-05/gorduino-v0.2a"
      },
      {
        "filename": "/files/gorduino_-_original_blog_recreated/gorduino-v0.3a.zip",
        "title": "2018-05/gorduino-v0.3a"
      }
    ]
  },
  {
    "id": "minimalist_arduino_-_original_blog_recreated",
    "title": "Minimalist Arduino - Original Blog Recreated",
    "date_publish": "2010-02-02 21:33:00",
    "body": "<p>This is another blog post from the early tT days I wanted to preserve for posterity. We were selling kits of the bare-minimum components to make an arduino board. I'm leaving all the links in this one to the wayback machine because I'm lazy. Even without the links working you ought to be able to make one of these given the fairly generic parts list.</p>\n\n<p><em><strong>Overview</strong></em></p>\n\n<p>Here at the Transistor, we love the Arduino platform, so we decided to make our own Arduino Clone. The Minimalist Arduino is designed for use in permanent or custom circuits on solderless breadboards, stripboard, or custom PCBs. It contains only the bare minimum parts required for building the Arduino platform. The schematic for the board can be downloaded <a href=\"https://web.archive.org/web/20160330094714/http://thetransistor.com/wp-content/uploads/2010/02/Minimalist-Arduino-Rev01-Schematic.pdf\">here</a> (pdf). <strong>Please read all instructions on this page before assembly.</strong> The parts list is as follows, with linked manufacturer datasheets when available:</p>\n\n<p><em><strong>Parts List</strong></em></p>\n\n<p>(1) <a href=\"https://web.archive.org/web/20160330094714/http://thetransistor.com/wp-content/uploads/2010/02/ATMega328P-Summary.pdf\">ATMega328P</a><br>\n(1) 28-Pin DIP Socket<br>\n(1) <a href=\"https://web.archive.org/web/20160330094714/http://thetransistor.com/wp-content/uploads/2010/02/LM7805-VREG.pdf\">LM7805 1A 5V Positive Voltage Regulator</a><br>\n(1) 16.000MHz Clock Crystal<br>\n(2) <a href=\"https://web.archive.org/web/20160330094714/http://thetransistor.com/wp-content/uploads/2010/02/22pF-Cap.pdf\">22pF Capacitor</a><br>\n(2) <a href=\"https://web.archive.org/web/20160330094714/http://thetransistor.com/wp-content/uploads/2010/02/10uF-Cap.pdf\">10uF Capacitor</a><br>\n(2) 100nF Capacitor<br>\n(1) <a href=\"https://web.archive.org/web/20160330094714/http://thetransistor.com/wp-content/uploads/2010/02/10kOhm-Resistor.pdf\">10kOhm Resistor</a><br>\n(2) <a href=\"https://web.archive.org/web/20160330094714/http://thetransistor.com/wp-content/uploads/2010/02/150-Ohm-Resistor.pdf\">150 Ohm Resistor</a><br>\n(2) <a href=\"https://web.archive.org/web/20160330094714/http://thetransistor.com/wp-content/uploads/2010/02/Green-LED-Info.txt\">Green 3mm LED</a></p>\n\n<p>These parts consist of two main components: The power supply circuit, and the ATMega328P and supporting circuitry. The power supply circuit is made of of the LM7805 voltage regulator, (2)10uF capacitors, (1) 150 Ohm resistor and (1) green 3mm LED. Circuit power can be supplied using these components and a 7 to 18V input voltage, or via a separate regulated voltage source such as power over a USB to Serial FTDI converter. Only use one power source to drive the 328P chip, or you may damage it.</p>\n\n<p>The remainder of the components are part of the ATMega328P circuit and support. This includes (1) clock crystal, (2) 22pF capacitors, (1) 10 kOhm resistor, (1) 3mm Green LED, (1) 150 Ohm Resistor, and (1) 100nF capacitor. The kit contains no wires, jumpers, or reset switch as the applications of this kit are intended to be open-ended and we did not wish to include unnecessary components.</p>\n\n<p><em><strong>Communicating with the Minimalist Arduino</strong></em></p>\n\n<p>In order for this kit to be fully functional, you must have a means by which to program and communicate with it. We did not include any means to do this in the kit, though our schematic shows the two most common methods for programming or sommunicating with a standalone ATMega328P: A USB to Serial FTDI dongle, and an ICSP Programmer header pinout.</p>\n\n<p>We recommend using the USB to Serial FTDI chip as the primary method of programming and communicating with the Minimalist Arduino in conjunction with the <a href=\"https://web.archive.org/web/20160330094714/http://arduino.cc/en/Main/Software\" target=\"new\">Arduino IDE</a>. Note that the second 100nF capacitor is used on the reset line for this method. The USB to Serial FTDI converter you use may not require this capacitor to function properly. Be sure to check your documentation. There are many places which sell USB to Serial FTDI chips. We recommend the <a href=\"http://www.moderndevice.com/products/usb-bub\" target=\"new\">USB-BUB</a> from Modern Device. They are also available from <a href=\"https://web.archive.org/web/20160330094714/http://www.sparkfun.com/commerce/product_info.php?products_id=9115\" target=\"new\">Sparkfun</a> and probably many other locations which we have not used. Since this chip has a reset pin and will automatically reset the 328P when programming, there is no need to include a physical reset switch in this kit. Also, a single USB to Serial FTDI board will be able to program as many kits as you want, as long as continued serial communication with the board is not required.</p>\n\n<p>Another method for programming the ATMega328 is to use an AVR programmer over the ICSP header. This step is required for changing the bootloader, but since all of our chips come preprogrammed with the Arduino bootloader, this step should be unnecessary. The ICSP header should always be connected to the +5V source from your LM7805, as it relies on external power to function. It also has a reset pin, which negates the need for a manual switch to be included in this kit.</p>\n\n<p>A third option for programming your Minimalist Arduino is to use another Arduino you own (Such as a Duemilanove, a Bare Bones Board, or any other working Arduino which uses a DIP socket to hold its chip) to program the chip. Once the chip is programmed, you can remove it and plug it into your custom circuit, assuming it will not need to be programmed again.</p>\n\n<p><em><strong>Assembling the Arduino</strong></em></p>\n\n<p>In order to create a working Arduino, we suggest that you begin by building and testing the power supply, which includes only (1) LM7805, (2) 10uF Capacitors, (1) Green 3mm LED and (1) 150 Ohm resistor. See the attached schematic for wiring instructions. Be sure to check the direction of the capacitors, as they will be destroyed if wired backwards, and we did not include spare parts in the kits. Also confirm that you put the 7805 in facing the correct direction or the circuit will not work properly, even though the LED may light. Connect an external voltage source (7V-18V) across the ground pin to the Vin pin, and ensure that the LED lights properly and that you have a steady +5V signal using a voltage meter before continuing.</p>\n\n<p>Depending on if you’re using a solderless breadboard, some stripboard or a custom homemade PCB, you may not need the 28-PIN DIP header. Next you should wire up the ATMEGA328P chip ignoring all optional components. Keep the power disconnected and wait 15-30 seconds between disconnecting the power and connecting any wires to your Atmega328P chip to be sure all capacitors have discharged. We suggest you wire up all included components before wiring the optional ICSP Header, FTDI header or reset switch. It is recommended that you start by connecting wires, and work your way up from small to large components. Double check that everything is wired correctly and that the ‘U’ mark at the top of the chip is in the correct location and that the wires all go to the correct pins. If your chip is damaged due to failure to follow the wiring diagrams, we are not responsible. If everything is wired correctly, reconnect the external power source and the Arduino should boot up and run the default ‘blink’ program on the green LED connected to Digital Pin 13.</p>\n\n<p>Once you have successfully gotten the LED to blink, you are now the owner of a working Minimalist Arduino. At this point you can connect your FTDI or ICSP headers, or plug your ATMega328P into another Arduino board and program the chip to do your bidding. <strong>Only connect the +5V source from the FTDI chip if you are not connected to the 7805 chip +5V source.</strong> If you wish to use external power, then do not connect the +5V pin from the FTDI board to the 328. The rest is up to you. Good luck, we’re all counting on you.</p>\n\n<p><em><strong>References and Sources</strong></em></p>\n\n<p>This design was based on several standalone Arduino projects found on the web. The following is a list of sites which unknowingly contributed to this design.</p>\n\n<p><a href=\"https://web.archive.org/web/20160330094714/http://www.arduino.cc/playground/Learning/AtmegaStandalone\" target=\"new\">http://www.arduino.cc/playground/Learning/AtmegaStandalone</a> – This is a page in the Arduino Playground which links to a number of tutorials and guides for creating a standalone Arduino, though most only used an ATMega8 or ATMega168 chip, and not an ATMega328.</p>\n\n<p><a href=\"https://web.archive.org/web/20160330094714/http://itp.nyu.edu/physcomp/Tutorials/ArduinoBreadboard\" target=\"new\">http://itp.nyu.edu/physcomp/Tutorials/ArduinoBreadboard</a> – This page from ITP PhysComp has step-by-step instructions for assembling an Arduino using an ATMega168 on a breadboard complete with FTDI and ICSP pinouts and bootloader instructions. The Minimalist Arduino design is based mostly on the guide at this page, though we added the 100nF Filter capacitor to the design.</p>\n\n<p><a href=\"https://web.archive.org/web/20160330094714/http://www.moderndevice.com/Docs/RBBB_Instructions_04.pdf\" target=\"new\">http://www.moderndevice.com/Docs/RBBB_Instructions_04.pdf</a> – The schematic for the RBBB was helpful in determining where to include the 100nF capacitor to the ITP PhysComp design, as well as confirming the other components as outlined in that tutorial.<br><br><a href=\"http://arduino.cc/en/Hacking/PinMapping168\" target=\"new\">http://arduino.cc/en/Hacking/PinMapping168</a> – This is the official Pin Mapping for an Arduino from the official Arduino site. This was essential in designing our schematic drawing which shows the chip pinouts.</p>\n\n<p><em><strong>Questions or Comments</strong></em></p>\n\n<p>If you have any questions, corrections or comments, please direct them to tim (at) thetransistor (dot) com. (Yeah, I'm tim (at) thisdomain now.)</p>",
    "image": {
      "file": "/files/minimalist_arduino_-_original_blog_recreated/img-0703-web.jpg"
    },
    "image_list": [],
    "file_list": [
      {
        "filename": "/files/minimalist_arduino_-_original_blog_recreated/minimalist-arduino-rev01-schematic.pdf",
        "title": "2018-05/minimalist-arduino-rev01-schematic"
      }
    ]
  },
  {
    "id": "4-player_mame_cabinet",
    "title": "4-Player MAME Cabinet",
    "date_publish": "2011-01-15 13:57:00",
    "body": "<p>This is a post for the 4-player arcade cabinet d3c4f and I made back around 2011. d3c4f did most of the general idea work, and I did all the CAD work. I believe these CAD files have been updated with added tolerances, but double check if you want someone to cut them for you. Our first batch was a bit too thin on the routed channels, and we had to manually route the edges off of everything to get it to fit. No warranty is implied or included, etc.</p>\n\n<p>It was designed to work with any VESA mount monitor, and as far as software/hardware, you're more or less on your own. I recommend a Raspberry Pi running Retro-Pie, and the joysticks and buttons of your choice. There's a parts list in the file download area below for reference. No idea is any of the bits are still available as listed..</p>",
    "image": {
      "file": "/files/4-player_mame_cabinet/fight.jpg"
    },
    "image_list": [
      {
        "filename": "/files/4-player_mame_cabinet/mame-sketchup-complete-front.jpg",
        "title": ""
      },
      {
        "filename": "/files/4-player_mame_cabinet/mame-sketchup-complete-rear.jpg",
        "title": ""
      },
      {
        "filename": "/files/4-player_mame_cabinet/mame-sketchup-partial-interior.jpg",
        "title": ""
      },
      {
        "filename": "/files/4-player_mame_cabinet/mame-sketchup-exploded.jpg",
        "title": ""
      },
      {
        "filename": "/files/4-player_mame_cabinet/1527516355_arcade-bezel.png",
        "title": ""
      }
    ],
    "file_list": [
      {
        "filename": "/files/4-player_mame_cabinet/1527516334_mame-cad-panel-1.pdf",
        "title": "mame-cad-panel-1"
      },
      {
        "filename": "/files/4-player_mame_cabinet/1527516336_mame-cad-panel-2.pdf",
        "title": "mame-cad-panel-2"
      },
      {
        "filename": "/files/4-player_mame_cabinet/1527516338_mame-cad-panel-3.pdf",
        "title": "mame-cad-panel-3"
      },
      {
        "filename": "/files/4-player_mame_cabinet/1527516341_mame-cad-panel-4.pdf",
        "title": "mame-cad-panel-4"
      },
      {
        "filename": "/files/4-player_mame_cabinet/mame-cabinet-cnc-parts.dwg",
        "title": "mame-cabinet-cnc-parts"
      },
      {
        "filename": "/files/4-player_mame_cabinet/mame-3d-v2-sketchup-7.skp",
        "title": "mame-3d-v2-sketchup-7"
      },
      {
        "filename": "/files/4-player_mame_cabinet/mame-3d-v2.skp",
        "title": "mame-3d-v2"
      },
      {
        "filename": "/files/4-player_mame_cabinet/mame-3d-exploded-v2.skp",
        "title": "mame-3d-exploded-v2"
      },
      {
        "filename": "/files/4-player_mame_cabinet/mame-3d-partial-interior-view-v2.skp",
        "title": "mame-3d-partial-interior-view-v2"
      },
      {
        "filename": "/files/4-player_mame_cabinet/parts-no-computer.xls",
        "title": "parts-no-computer"
      }
    ]
  },
  {
    "id": "fake_dynamic_dns",
    "title": "Fake Dynamic DNS",
    "date_publish": "2018-05-28 14:19:22",
    "body": "<p>This is just a simple script I run from my home server to a remote one, so I can keep my local ip address updated and remote in with ease. I run it every 15 minutes as a cronjob, and it generates a timestamped file stating when the ip was last updated, as well as a script to let me automatically log in to the most recently recorded ip.</p>\n\n<p>It uses https://twa.ninja/ip.php to generate a string code of the datestamp and ip address. Feel free to use my site, or make your own similar setup.</p>",
    "image": {
      "file": ""
    },
    "image_list": [],
    "file_list": [
      {
        "filename": "/files/fake_dynamic_dns/ip.sh",
        "title": "ip.sh"
      }
    ]
  },
  {
    "id": "wedding_arch",
    "title": "Wedding Arch",
    "date_publish": "2015-09-12 17:00:00",
    "body": "<p>This is a bunch of photos of the build for the arch for my wedding. It's done with a ton of mortise and tenon joints, and glue. The top bars are at a 45 degree angle, the rest are all square joints. Made from cedar, and finished with linseed oil.</p>",
    "image": {
      "file": "/files/wedding_arch/1539-0074.jpg"
    },
    "image_list": [
      {
        "filename": "/files/wedding_arch/2015-07-26-11.37.26.jpg",
        "title": ""
      },
      {
        "filename": "/files/wedding_arch/2015-07-28-06.43.30.jpg",
        "title": ""
      },
      {
        "filename": "/files/wedding_arch/2015-08-04-19.39.17.jpg",
        "title": ""
      },
      {
        "filename": "/files/wedding_arch/2015-08-04-21.01.08.jpg",
        "title": ""
      },
      {
        "filename": "/files/wedding_arch/2015-08-04-21.08.51.jpg",
        "title": ""
      },
      {
        "filename": "/files/wedding_arch/2015-08-04-21.08.58.jpg",
        "title": ""
      },
      {
        "filename": "/files/wedding_arch/2015-08-15-19.46.24.jpg",
        "title": ""
      },
      {
        "filename": "/files/wedding_arch/2015-08-15-19.46.35.jpg",
        "title": ""
      },
      {
        "filename": "/files/wedding_arch/2015-08-16-21.27.35.jpg",
        "title": ""
      },
      {
        "filename": "/files/wedding_arch/2015-08-26-20.33.06.jpg",
        "title": ""
      },
      {
        "filename": "/files/wedding_arch/2015-08-27-18.51.33.jpg",
        "title": ""
      },
      {
        "filename": "/files/wedding_arch/2015-08-27-19.17.31.jpg",
        "title": ""
      },
      {
        "filename": "/files/wedding_arch/2015-08-29-08.18.17.jpg",
        "title": ""
      },
      {
        "filename": "/files/wedding_arch/2015-08-29-09.39.52.jpg",
        "title": ""
      },
      {
        "filename": "/files/wedding_arch/2015-08-30-15.39.59.jpg",
        "title": ""
      },
      {
        "filename": "/files/wedding_arch/2015-08-30-09.44.01.jpg",
        "title": ""
      }
    ],
    "file_list": []
  },
  {
    "id": "planer_cart",
    "title": "Planer Cart",
    "date_publish": "2015-07-23 16:35:00",
    "body": "<p>I got a practically free planer, so I decided to make a stand for it. 2x4 and 4x4 Pine and Plywood, with Mortise and Tenons and Screws.</p>",
    "image": {
      "file": "/files/planer_cart/2015-07-23-20.25.07.jpg"
    },
    "image_list": [
      {
        "filename": "/files/planer_cart/2015-07-01-21.27.59.jpg",
        "title": ""
      },
      {
        "filename": "/files/planer_cart/2015-07-01-21.28.11.jpg",
        "title": ""
      },
      {
        "filename": "/files/planer_cart/2015-07-01-21.28.28.jpg",
        "title": ""
      },
      {
        "filename": "/files/planer_cart/2015-07-05-15.21.18.jpg",
        "title": ""
      },
      {
        "filename": "/files/planer_cart/2015-07-05-15.22.13.jpg",
        "title": ""
      },
      {
        "filename": "/files/planer_cart/2015-07-22-20.53.48.jpg",
        "title": ""
      },
      {
        "filename": "/files/planer_cart/2015-07-22-20.53.58.jpg",
        "title": ""
      },
      {
        "filename": "/files/planer_cart/2015-07-22-21.03.11.jpg",
        "title": ""
      },
      {
        "filename": "/files/planer_cart/2015-07-23-20.24.40.jpg",
        "title": ""
      },
      {
        "filename": "/files/planer_cart/2015-07-23-20.24.46.jpg",
        "title": ""
      }
    ],
    "file_list": []
  },
  {
    "id": "iidx_deck_-_build_log_-_part_1",
    "title": "IIDX Deck - Build Log - Part 1",
    "date_publish": "2015-09-18 18:00:00",
    "body": "<p>This covers the initial design and failed attempts way back in 2010, and eventually starting over in 2015.</p>\n\n<p>So, this is a project I started back in 2009 at HackSLC, predating even the Transistor. I wanted to build my own Beatmania IIDX arcade-spec controller. When the project first began, the idea was to dismantle the american PS2 controller I had, and give it some better buttons and a wheel, so I could still use it for my American PS2 version of Beatmania.</p>\n\n<p>These first two pics are of my trying along this path back at tT in Provo. Not a lot of records form that time. One shows the unmodified IIDX america controller, and the other shows my first attempt at a disk. It spun well, but I never got the hall effect sensor and magnet array inside to work right.</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_1/img-20120209-001135.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_1/img-20120209-001135.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_1/img-2765.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_1/img-2765.jpg\"></a></div></p>\n\n<p>We can now skip forward a few years to 2015. I was mid-burnout phase from after Elefu, much more into woodworking than electronics, and decided to revisit the controller project. I came up with a totally new design, based around the new woodworking skills I had acquired and the laser cutter for cutting the deck. I was going to go all-in.</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_1/iidx-deck.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_1/iidx-deck.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_1/iidx-deck-open.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_1/iidx-deck-open.jpg\"></a></div></p>\n\n<p>I made a sketchup file for my design (download at the bottom) based on these dimensions for the arcade controller I found online.</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_1/iidx-keys.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_1/iidx-keys.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_1/iidx-layout.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_1/iidx-layout.jpg\"></a></div></p>\n\n<p>With that out of the way, I set to work on the woodworking. I planed a bunch of oak first, and left it to sit for a long while in my shop before beginning work in earnest.</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_1/2015-09-22-19.37.37.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_1/2015-09-22-19.37.37.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_1/2015-09-26-20.14.07.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_1/2015-09-26-20.14.07.jpg\"></a></div></p>\n\n<p></p>",
    "image": {
      "file": "/files/iidx_deck_-_build_log_-_part_1/1527528046_2015-09-26-20.14.49.jpg"
    },
    "image_list": [],
    "file_list": [
      {
        "filename": "/files/iidx_deck_-_build_log_-_part_1/iidx-deck.skp",
        "title": "IIDX Sketchup File"
      },
      {
        "filename": "/files/iidx_deck_-_build_log_-_part_1/iidx-deck-r14.dwg",
        "title": "IIDX AutoCAD File"
      }
    ]
  },
  {
    "id": "iidx_deck_-_build_log_-_part_2",
    "title": "IIDX Deck - Build Log - Part 2",
    "date_publish": "2017-11-01 17:24:00",
    "body": "<p> This part will cover the actual physical build of the deck, mostly the woodworking stuff.</p>\n\n<p>Step 1 was to laminate the oak pieces that would form the top.</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_2/2016-05-21-16.55.04.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_2/2016-05-21-16.55.04.jpg\"></a></div></p>\n\n<p>I had also at some point since planing the wood back in 2015 laser cut all the plexiglass bits that would form the deck top. I laid them out as precisely as I could on the laminated top, and then did some drilling and shallow mortisework to get it button-ready. This phase took me from 2016 into 2017, due to life obligations, adopting an 8 month old German Shepherd named Ziggy, and just not having a ton of time or motivaton to work on it.</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_2/2016-05-22-11.49.14.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_2/2016-05-22-11.49.14.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_2/2017-09-30-07.45.00.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_2/2017-09-30-07.45.00.jpg\"></a></div></p>\n\n<p>After the top was ready, I had to make the dovetailed box with panel and frame bottom. See below for several pics of this process.</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_2/2017-09-30-20.23.04.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_2/2017-09-30-20.23.04.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_2/2017-10-06-17.29.17.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_2/2017-10-06-17.29.17.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_2/2017-10-06-17.29.24.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_2/2017-10-06-17.29.24.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_2/2017-10-09-19.59.56.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_2/2017-10-09-19.59.56.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_2/2017-10-09-20.10.58.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_2/2017-10-09-20.10.58.jpg\"></a></div></p>\n\n<p>It looks more warped than it was in this pic. Not sure why. I glued up the dovetail section and patched some of the tails as needed.</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_2/2017-10-12-17.40.15.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_2/2017-10-12-17.40.15.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_2/2017-10-13-21.11.28.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_2/2017-10-13-21.11.28.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_2/2017-10-13-21.11.36.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_2/2017-10-13-21.11.36.jpg\"></a></div></p>\n\n<p></p>\n\n<p></p>",
    "image": {
      "file": "/files/iidx_deck_-_build_log_-_part_2/1527531093_2017-11-05-18.03.25.jpg"
    },
    "image_list": [],
    "file_list": []
  },
  {
    "id": "iidx_deck_-_build_log_-_part_3",
    "title": "IIDX Deck - Build Log - Part 3",
    "date_publish": "2017-11-12 18:12:00",
    "body": "<p>This part of the build log covers the spindle assembly, wiring, and initial lighting testing.</p>\n\n<p>I had originally intended on using an optical encoder attached to a lego wheel I had built a long while ago for the project, but it was quite unreliable. I figured if I spent this much effort on the project, I should make a bombproof spindle assembly for it as well.</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_3/wiki-support-plan.png\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_3/wiki-support-plan.png\"></a></div></p>\n\n<p>My initial design for the spindle turned out to be pretty close to what I actually built. Used some bearings and pulleys I paid way too much for on McMaster-Carr, but writing this several months of gameplay down the line, I am glad I went with something a bit overengineered and very reliable.</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_3/2017-11-11-07.34.58.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_3/2017-11-11-07.34.58.jpg\"></a></div></p>\n\n<p>I then screwed the spindle assemblies into the top of the deck, and added the LED lighting strips. The diameter of the circle I chose ended up with 29 LEDs per side. A nice large prime number for me to deal with in my animation code. More on that in the next part.</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_3/2017-11-11-09.28.20.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_3/2017-11-11-09.28.20.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_3/2017-11-11-09.28.31.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_3/2017-11-11-09.28.31.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_3/2017-11-11-09.29.54.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_3/2017-11-11-09.29.54.jpg\"></a></div></p>\n\n<p>THe next step was to wire everything up. I'm using a Teensy 3.1 as the MCU. I'll put the code in the next blog post for download. The buttons needed several things connected together, so I made some distribution boards for power and multiple connections by hand. I also threw in a relay to turn off the lighting power if the USB was unplugged, as the controller is powered only over USB.</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_3/2017-11-11-12.45.39.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_3/2017-11-11-12.45.39.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_3/2017-11-11-12.45.43.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_3/2017-11-11-12.45.43.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_3/2017-11-11-12.45.55.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_3/2017-11-11-12.45.55.jpg\"></a></div></p>\n\n<p>I then did some initial lighting  and button wiring tests to make sure all was well before I finished wiring everything.</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_3/2017-11-11-17.27.53.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_3/2017-11-11-17.27.53.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_3/2017-11-11-20.55.21.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_3/2017-11-11-20.55.21.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_3/2017-11-11-21.51.12.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_3/2017-11-11-21.51.12.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_3/2017-11-12-18.57.30.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_3/2017-11-12-18.57.30.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_3/2017-11-12-18.57.42.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_3/2017-11-12-18.57.42.jpg\"></a></div></p>\n\n<p>I ended up drilling holes for the power cord and USB cable, and added some handles on the back to make transport easier, as well as a latch on the front to keep the lid from popping open when moving it.</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_3/2017-11-14-18.47.48.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_3/2017-11-14-18.47.48.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_3/2017-11-14-18.47.51.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_3/2017-11-14-18.47.51.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_3/2017-11-14-19.23.03.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_3/2017-11-14-19.23.03.jpg\"></a></div></p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_3/2017-11-14-19.22.58.jpg\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_3/2017-11-14-19.22.58.jpg\"></a></div></p>\n\n<p>Now it was all wired. Had to fix a couple bad connections, but it was ready for programming and lighting business. I'll cover the programming and color modes in Part 4.</p>",
    "image": {
      "file": "/files/iidx_deck_-_build_log_-_part_3/2017-11-12-18.58.34.jpg"
    },
    "image_list": [],
    "file_list": []
  },
  {
    "id": "iidx_deck_-_build_log_-_part_4",
    "title": "IIDX Deck - Build Log - Part 4",
    "date_publish": "2018-05-28 18:36:00",
    "body": "<p>This part covers the programming and lighting modes. Source code is down at the bottom for download, as well as <a href=\"https://github.com/kiyoshigawa/IIDX_Deck\">on github</a>.</p>\n\n<p>With everything wired up, I just had to program basic joystick functionality using the teensy, as well as some simple code to read from the digital encoders for the spindles. It's all covered in the source code pretty well, so I won't get into that too much here. What I will cover are the 14 different lighting modes I programmed for the controller. Not covered in the source code: all the arcade buttons will light up when pressed. I did this by routing the LED power through the button. The button is grounded when pressed, completing the circuit for the LED to light up, and open when not pressed, preventing current from flowing.</p>\n\n<p>Some basic thoughts on how the lighting modes function. I have a colors.h file which contains several color sets which I refer to as 'Rainbows' in the source code. You can swap between rainbows by turning on modifier mode and using the P1 start and select buttons to cycle through rainbows. The rainbows give the various lighting modes below the choices of color to switch to. They go from one to the next, skipping the 'off' color as needed depending on mode. Find below a video showing the various rainbows. Most of the videos of particular modes below will use the standard 'ROYGBIV' type rainbow. Sorry on the video quality here, I have no idea what I'm doing with recording bright lights in a dark room.</p>\n\n<p><iframe allowfullscreen=\"\" frameborder=\"0\" height=\"315\" src=\"https://www.youtube.com/embed/jbcMVnGK1jU?rel=0\" width=\"560\"></iframe></p>\n\n<p>To change to a lighting mode, toggle the MOD button to the on position, and press one of the 14 LM keys as shown in this handy diagram. R+ and R- will switch rainbows when the MOD key is engaged. The 'Esc' button sends an escape keyboard button press when the mod button is engaged (so I can exit the program with the controller as needed), and the 'Go' button sends Windows Key + 5, as that is where I have my shortcut to launch Lunatic Rave 2 in my taskbar. If you want to map them to something else, it's easy to edit in the source code. To resume normal play, disengage the MOD button.</p>\n\n<p><div class=\"post-body-image-holder\"><a class=\"image-link\" target=\"_blank\" href=\"/files/iidx_deck_-_build_log_-_part_4/lighting-control-buttons.png\"><img class=\"post-body-image\" alt=\"\" title=\"\" src=\"/files/iidx_deck_-_build_log_-_part_4/lighting-control-buttons.png\"></a></div></p>\n\n<p><strong>Lighting Mode 1: Solid Color</strong></p>\n\n<p>This lighting mode will simply cycle through the colors of the current rainbow one by one, skipping the 'off' color, and set the entire deck to this single color. You can cycle to a specific color by pressing the LM1 button repeatedly while the MOD button is engaged. The color will remain constant when the MOD button is disengaged.</p>\n\n<p><iframe allowfullscreen=\"\" frameborder=\"0\" height=\"315\" src=\"https://www.youtube.com/embed/KDwbUnO-o2c?rel=0\" width=\"560\"></iframe></p>\n\n<p><strong>Lighting Mode 2: Slow Fade</strong></p>\n\n<p>This lighting mode will cycle through the colors of the current rainbow slowly fading from one to the next, and set the entire deck to that color. Repeatedly pressing the LM2 button will cycle to the next color of the rainbow from the current fade state. When the MOD button is disengaged the colors will cycle on their own indefinitely.</p>\n\n<p><iframe allowfullscreen=\"\" frameborder=\"0\" height=\"315\" src=\"https://www.youtube.com/embed/GIeDqKPRzSM?rel=0\" width=\"560\"></iframe></p>\n\n<p><strong>Lighting Mode 3: Marquee</strong></p>\n\n<p>This lighting mode will show a marquee that marches around the wheel at a steady rate. The direction the marquee animation is traveling depends on the last direction the disk was turned. Repeatedly pressing the LM3 button while the MOD button is engaged will cycle through the rainbow colors. The color will remain unchanged when the MOD button is disengaged.</p>\n\n<p><iframe allowfullscreen=\"\" frameborder=\"0\" height=\"315\" src=\"https://www.youtube.com/embed/JJznQX1bBH8?rel=0\" width=\"560\"></iframe></p>\n\n<p><strong>Lighting Mode 4: Slow Fade Marquee</strong></p>\n\n<p>This lightning mode is the same as the marquee type above, but the color will continuously fade through the entire rainbow slowly. Repeated pressing of the LM4 button will cycle to the next color of the rainbow from the current fade state. When the MOD button is disengaged the colors will cycle on their own indefinitely.</p>\n\n<p><iframe allowfullscreen=\"\" frameborder=\"0\" height=\"315\" src=\"https://www.youtube.com/embed/eEJGKgOnd9M?rel=0\" width=\"560\"></iframe></p>\n\n<p><strong>Lighting Mode 5: Wiki</strong></p>\n\n<p>The wiki lighting more will populate the deck with a solid color marquee style pattern, but unlike the marquee mode, it will remain stationary until the disk is moved. The lighting pattern will then move (more or less) with the disk as it rotates. As with the solid color option, repeatedly pressing the LM5 button while the MOD button is engaged will cycle through the rainbow colors. The color will remain unchanged when the MOD button is disengaged.</p>\n\n<p><iframe allowfullscreen=\"\" frameborder=\"0\" height=\"315\" src=\"https://www.youtube.com/embed/AMZ53nqOELA?rel=0\" width=\"560\"></iframe></p>\n\n<p><strong>Lighting Mode 6: Slow Fade Wiki</strong></p>\n\n<p>The slow fade wiki mode is the same as the wiki mode, but the color fades slowly through all the rainbow colors. Repeated pressing of the LM6 button will cycle to the next color of the rainbow from the current fade state. When the MOD button is disengaged the colors will cycle on their own indefinitely.</p>\n\n<p><iframe allowfullscreen=\"\" frameborder=\"0\" height=\"315\" src=\"https://www.youtube.com/embed/zwd-XPc0fG4?rel=0\" width=\"560\"></iframe></p>\n\n<p><strong>Lighting Mode 7: Rainbow Wiki</strong></p>\n\n<p>The rainbow wiki mode populated a smoothly transitioned version of the rainbow to the disk for each player. The rainbow will then move to follow the movement of the disks (roughly) as they are rotated.</p>\n\n<p><iframe allowfullscreen=\"\" frameborder=\"0\" height=\"315\" src=\"https://www.youtube.com/embed/UxbvPyGKHIA?rel=0\" width=\"560\"></iframe></p>\n\n<p><strong>Lighting Mode 8: Slow Rotate Rainbow</strong></p>\n\n<p>The slow rotate mode populates the disk lighting with the smoothly faded rainbow pattern, but it rotates freely without input from the player in the direction the disk was last rotated. If the direction fo the disk changes, the direction of rotation changes as well.</p>\n\n<p><iframe allowfullscreen=\"\" frameborder=\"0\" height=\"315\" src=\"https://www.youtube.com/embed/kAf1MVp_5Xk?rel=0\" width=\"560\"></iframe></p>\n\n<p><strong>Lighting Mode 9: Random Rainbow</strong></p>\n\n<p>The random rainbow mode will populate the disk with a randomly positioned smooth-fade rainbow pattern every time any button is pressed while the MOD key is disengaged. This one can be a bit distracting, honestly.</p>\n\n<p><iframe allowfullscreen=\"\" frameborder=\"0\" height=\"315\" src=\"https://www.youtube.com/embed/-hdt7WlVTf8?rel=0\" width=\"560\"></iframe></p>\n\n<p><strong>Lighting Mode 10: Random Color</strong></p>\n\n<p>This lighting mode has been nicknamed 'seizure mode' by those who have used it. Every time any button is pressed while the MOD button is disengaged, a random color from the rainbow will be displayed as a solid color for the whole disk.</p>\n\n<p><iframe allowfullscreen=\"\" frameborder=\"0\" height=\"315\" src=\"https://www.youtube.com/embed/ipMtOE5cmK4?rel=0\" width=\"560\"></iframe></p>\n\n<p><strong>Lighting Mode 11: Off</strong></p>\n\n<p>This lighting mode shows no colors on the disks at all, but the power for lighting is still on, and the buttons will still light up when pressed.</p>\n\n<p><iframe allowfullscreen=\"\" frameborder=\"0\" height=\"315\" src=\"https://www.youtube.com/embed/gq_EYaebht4?rel=0\" width=\"560\"></iframe></p>\n\n<p><strong>Lighting Mode 12: Color Pulse</strong></p>\n\n<p>This mode displays a solid single color of the rainbow at the bottom of the disk. Repeatedly pressing the LM12 button while the MOD button is engaged will cycle through the rainbow colors. The color will remain unchanged when the MOD button is disengaged. Once the MOD button is disengaged, every time you press a button, a pulse of the color at the bottom of the disk is 'shot' up one side towards the top of the disk, until it vanishes.</p>\n\n<p><iframe allowfullscreen=\"\" frameborder=\"0\" height=\"315\" src=\"https://www.youtube.com/embed/2wnMeCvU-Zo?rel=0\" width=\"560\"></iframe></p>\n\n<p><strong>Lighting Mode 13: Slow Fade Color Pulse</strong></p>\n\n<p>This mode is similar to the Color Pulse mode above, but the color at the bottom of the disk will slowly fade through the rainbow. Repeatedly pressing the LM13 button will cycle to the next color of the rainbow from the current fade state. When the MOD button is disengaged the colors will cycle on their own indefinitely. Once the MOD button is disengaged, every time you press a button, a pulse of the color at the bottom of the disk is 'shot' up one side towards the top of the disk, until it vanishes.</p>\n\n<p><iframe allowfullscreen=\"\" frameborder=\"0\" height=\"315\" src=\"https://www.youtube.com/embed/GXArSiZ4Ras?rel=0\" width=\"560\"></iframe></p>\n\n<p><strong>Lighting Mode 14: Rainbow Color Pulse</strong></p>\n\n<p>This mode is very similar to the slow fade color pulse, and it will behave identically until a button is pressed. When the button is pressed, it will send a pulse of the next color in the rainbow, and change immediately to that color at the bottom of the disk. Basically, it is like the slow fade color pulse mode, but color changes are instant and quicker.</p>\n\n<p><iframe allowfullscreen=\"\" frameborder=\"0\" height=\"315\" src=\"https://www.youtube.com/embed/HUi5bA8QE9U?rel=0\" width=\"560\"></iframe></p>",
    "image": {
      "file": "/files/iidx_deck_-_build_log_-_part_4/2018-05-28-12.37.55.jpg"
    },
    "image_list": [],
    "file_list": [
      {
        "filename": "/files/iidx_deck_-_build_log_-_part_4/colors.h",
        "title": "colors.h"
      },
      {
        "filename": "/files/iidx_deck_-_build_log_-_part_4/1527532983_iidx-controller.pde",
        "title": "IIDX Controller.pde"
      }
    ]
  },
  {
    "id": "20m_dipole",
    "title": "20m Dipole",
    "date_publish": "2018-05-28 20:53:54",
    "body": "<p>I just made a very simple 20m dipole. It's two lengths of wire connected to an SO-239 connector in a PVC enclosure, and tied off to the swamp cooler on top of my roof and a nearby tree. I cut each wire to 18'-0\" long initially, and folded it back ~9 inches to ~17'-3\" of wire on each leg. After testing, I folded it back and wrapped it around at the ends to ~16'-7\". In testing it, I get an SWR of ~1.67 to ~1.77 over the 20m ham band, so good enough for me. I was curious to see if removing the folded back wire would cause any issues, and it caused my center frequency to go up to ~14.6MHz, resulting in a measured SWR of ~1.75-2.0 in the 20m band. I soldered the extra length back on and left it wrapped on there to get the tuned chart you see below. I am able to hear lots of traffic using my new uBitX, as well as my LimeSDR Mini. See below for photos of the swr testing and waterfall on the LimeSDR. I definitely need to get an fm filter for the LimeSDR, as it picks up a ton of FM harmonics in the 20m band. Luckily iirc the uBitX has a filter to block everything above 30MHz, so I shouldn't have this issue on there.</p>",
    "image": {
      "file": "/files/20m_dipole/2018-05-28-10.16.47.jpg"
    },
    "image_list": [
      {
        "filename": "/files/20m_dipole/swr-for-dipole-first-attempt.png",
        "title": "SWR Without Tuning"
      },
      {
        "filename": "/files/20m_dipole/swr-for-dipole-tuned.png",
        "title": "All HF - Tuned"
      },
      {
        "filename": "/files/20m_dipole/swr-for-dipole-tuned-20m.png",
        "title": "20m Band - Tuned"
      },
      {
        "filename": "/files/20m_dipole/20m-waterfall-pre-fm-filter.png",
        "title": "FM Harmonics Waterfall"
      }
    ],
    "file_list": []
  },
  {
    "id": "radical_dreamers_tab",
    "title": "Radical Dreamers Tab",
    "date_publish": "2017-01-15 14:56:00",
    "body": "<p>I wanted to learn to play the song Radical Dreamers composed by Yasunori Mitsuda for the Chrono Cross soundtrack. I found some piano sheet music online, and made a guitar tab based on it. Hopefully someone out there will enjoy it as well.</p>",
    "image": {
      "file": ""
    },
    "image_list": [],
    "file_list": [
      {
        "filename": "/files/radical_dreamers_tab/radical-dreamers.gp",
        "title": "radical-dreamers.gp"
      },
      {
        "filename": "/files/radical_dreamers_tab/radical-dreamers.gp5",
        "title": "radical-dreamers.gp5"
      },
      {
        "filename": "/files/radical_dreamers_tab/radical-dreamers.gpx",
        "title": "radical-dreamers.gpx"
      }
    ]
  },
  {
    "id": "zombie_laser_tag",
    "title": "Zombie Laser Tag",
    "date_publish": "2010-11-05 13:13:00",
    "body": "<p>This game was made as part of an internet video series back in late 2010. It was called the 'Take on the Machine Challenge' and pitted 5 hackerspaces against each other, to make a cool project given a donation. The Transistor decided to make a zombine laser tag game using RC Cars, Gorduinos, and XBees. Unfortunately the video documentary of our work has since been taken down, and we don't have a ton of records from this time. I did find a bunch of photos from the build though, and some code from the zombie bots and the laser guns we made, so I will share those on here for everyone to see.</p>",
    "image": {
      "file": "/files/zombie_laser_tag/zombie.png"
    },
    "image_list": [
      {
        "filename": "/files/zombie_laser_tag/img-1671.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1675.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1670.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1674.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1678.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1672.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1677.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1679.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1682.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1683.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1693.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1684.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1690.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1686.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1694.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1698.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1695.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1699.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1696.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1700.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1703.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1701.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1704.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1702.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1879.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1910.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1925.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1912.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1881.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1880.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1926.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1927.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1928.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1930.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1931.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1929.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1932.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1933.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1941.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1942.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1943.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1947.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1945.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1944.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1951.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1950.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1948.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1952.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1953.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1954.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1957.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1955.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1956.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1960.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1959.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1961.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1964.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1965.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1966.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1968.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1967.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1970.jpg",
        "title": ""
      },
      {
        "filename": "/files/zombie_laser_tag/img-1969.jpg",
        "title": ""
      }
    ],
    "file_list": [
      {
        "filename": "/files/zombie_laser_tag/zombie-gun-typical.pde",
        "title": "zombie-gun-typical.pde"
      },
      {
        "filename": "/files/zombie_laser_tag/sensor-interrupt.pde",
        "title": "sensor-interrupt.pde"
      },
      {
        "filename": "/files/zombie_laser_tag/max-servo-test.pde",
        "title": "max-servo-test.pde"
      }
    ]
  },
  {
    "id": "the_night_we_flooded_tt_provo",
    "title": "The Night We Flooded tT Provo",
    "date_publish": "2010-08-18 02:30:00",
    "body": "<p>On July 23, 2010 we installed a shiny new counter and sink in the attic of the Startup Building in Provo, where the Transistor was located. Good times were had by all, until Tuesday August 17. Around 6:30 PM I received a call drom d3c4f, who informed me that apparently the whole building was flooding, and the source was the sink we had installed and used happily for almost a month. I resigned myself to the chaos that was to ensue, and headed south from my apartment in West Jordan. We ended up spending most of the night pulling up soggy carpet, removing wet ceiling tiles which likely contained asbestos, and pulling sopping wet batt insulation from the ceilings until around 2:30 in the morning.</p>\n\n<p>The water had come from a compression fitting on the water supply line that had popped open. It made it from our spot in the attic all the way down to the showroom 3 floors below.We did eventually get everything cleaned up and dry, replaced the ceiling tiles and insulation, and made damn sure the compression fittings on the sink were not going to come loose ever again. On the plus side we did discover a startup from the late 80s that was focused on something similar to modern day RAID arrays called Dune. They had aparently been paying rent since 1993, and had not visited their office once in that timeframe, just left all their stuff there.</p>",
    "image": {
      "file": "/files/the_night_we_flooded_tt_provo/img-1877.jpg"
    },
    "image_list": [
      {
        "filename": "/files/the_night_we_flooded_tt_provo/1527607667_img-1597.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/1527607664_img-1598.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1830.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1827.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1826.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1831.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1832.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1833.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1828.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1836.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1834.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1837.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1835.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1838.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1839.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1843.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1844.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1846.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1845.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1849.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1848.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1847.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1851.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1850.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1852.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1855.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1853.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1854.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1857.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1858.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1859.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1856.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1860.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1863.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1861.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1864.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1865.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1862.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1866.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1867.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1869.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1871.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1870.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1872.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1868.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1873.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1876.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1874.jpg",
        "title": ""
      },
      {
        "filename": "/files/the_night_we_flooded_tt_provo/img-1875.jpg",
        "title": ""
      }
    ],
    "file_list": []
  },
  {
    "id": "animatronic_r2-d2",
    "title": "Animatronic R2-D2",
    "date_publish": "2010-04-02 22:00:00",
    "body": "<p>This is a project from the old Transistor days. It never got a blog post, but it should have, so now it will. My Friend Wharff had an R2-D2 USB hub that made a long series of beeps when a button was pressed. He wanted to learn about electronics, and asked for my help in making the top of R2's head to move about with blinking LEDs when the button was pressed, in addition to the sound it makes.</p>\n\n<p>It ended up taking several weeks, through much stress and learning. We made a minimalist arduino to leave in the body of R2, and fashioned a way to get a red LED as well as a white one into the head and shine through his hologram projector port. We got it to randomly move to various positions for the duration of the 30 second long sound clip, and then return to center and 'project a hgologram' when done, by blinking the white LED at varying intensity. There was a fair bit of frustration in this build, but it ended up working, and allowed me to get to know one of my now closest friends.</p>\n\n<p>I just took it off a shelf, dusted it off, and filmed this video of it still working today.</p>\n\n<p><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/1JTJ4cmDN-M?rel=0\" frameborder=\"0\" allowfullscreen=\"\"></iframe></p>",
    "image": {
      "file": "/files/animatronic_r2-d2/img-0946.jpg"
    },
    "image_list": [
      {
        "filename": "/files/animatronic_r2-d2/img-0931.jpg",
        "title": ""
      },
      {
        "filename": "/files/animatronic_r2-d2/img-0944.jpg",
        "title": ""
      },
      {
        "filename": "/files/animatronic_r2-d2/img-0945.jpg",
        "title": ""
      }
    ],
    "file_list": []
  },
  {
    "id": "led_cube",
    "title": "LED Cube",
    "date_publish": "2011-11-01 18:54:00",
    "body": "<p>This is an LED cube I made from a minimalist arduino, some resistors, and a bunch of LEDs back in 2011. Not much to it really, and a couple of the LEDs are out at the moment. Not sure why. *shrug*</p>\n\n<p><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/TQCR76ZAHAo\" frameborder=\"0\" allowfullscreen=\"\"></iframe></p>",
    "image": {
      "file": "/files/led_cube/2018-05-29-20.25.54.jpg"
    },
    "image_list": [
      {
        "filename": "/files/led_cube/2018-05-29-20.25.44.jpg",
        "title": ""
      },
      {
        "filename": "/files/led_cube/2018-05-29-20.26.11.jpg",
        "title": ""
      },
      {
        "filename": "/files/led_cube/2018-05-29-20.25.38.jpg",
        "title": ""
      },
      {
        "filename": "/files/led_cube/2018-05-29-20.25.57.jpg",
        "title": ""
      }
    ],
    "file_list": [
      {
        "filename": "/files/led_cube/led-cube-4x4x4.pde",
        "title": "led-cube-4x4x4.pde"
      }
    ]
  },
  {
    "id": "stepmania_controller",
    "title": "Stepmania Controller",
    "date_publish": "2013-05-25 23:50:00",
    "body": "<p>This was a simple arcade controller I made with the laser cutter, an Atmega 32u4 board, and some arcade buttons. Another simple project. It worked pretty well for quite some time, but I just plugged it into my Windows 10 computer and I got a lovely BSOD, so I might want to revisit this one in the near future.</p>\n\n<p>I know I'd go for a Teensy LC if I made another one of these, and maybe give it the IIDX treatment with nice lighting modes. See below for some pics and my CAD file from the laser cutter.</p>",
    "image": {
      "file": "/files/stepmania_controller/2018-05-29-20.51.05.jpg"
    },
    "image_list": [
      {
        "filename": "/files/stepmania_controller/2018-05-29-20.50.34.jpg",
        "title": ""
      },
      {
        "filename": "/files/stepmania_controller/2018-05-29-20.50.26.jpg",
        "title": ""
      },
      {
        "filename": "/files/stepmania_controller/2018-05-29-20.51.39.jpg",
        "title": ""
      }
    ],
    "file_list": [
      {
        "filename": "/files/stepmania_controller/stepmania-box.dwg",
        "title": "stepmania-box.dwg"
      }
    ]
  },
  {
    "id": "limesdr_mini_case_and_fm_filter",
    "title": "LimeSDR Mini Case and FM Filter",
    "date_publish": "2018-05-30 03:17:22",
    "body": "<p>I made a laser-cut acrylic case for my LimeSDR Mini. CAD Files below. I also installed an FM filter. You can see the comparison before and after on the ameteur 20m band, and boy does it make a world of difference.</p>",
    "image": {
      "file": "/files/limesdr_mini_case_and_fm_filter/2018-05-29-21.13.39.jpg"
    },
    "image_list": [
      {
        "filename": "/files/limesdr_mini_case_and_fm_filter/20m-waterfall-post-fm-filter.png",
        "title": "20m Waterfall with FM Filter"
      },
      {
        "filename": "/files/limesdr_mini_case_and_fm_filter/1527650693_20m-waterfall-pre-fm-filter.png",
        "title": "20m Waterfall without FM Filter"
      },
      {
        "filename": "/files/limesdr_mini_case_and_fm_filter/2018-05-29-21.13.47.jpg",
        "title": ""
      },
      {
        "filename": "/files/limesdr_mini_case_and_fm_filter/2018-05-29-21.14.02.jpg",
        "title": ""
      }
    ],
    "file_list": [
      {
        "filename": "/files/limesdr_mini_case_and_fm_filter/limesdr-mini-case.pdf",
        "title": "limesdr-mini-case.pdf"
      },
      {
        "filename": "/files/limesdr_mini_case_and_fm_filter/limesdr-mini-case.dwg",
        "title": "limesdr-mini-case.dwg"
      }
    ]
  },
  {
    "id": "phase_shift_guitar",
    "title": "Phase Shift Guitar",
    "date_publish": "2013-06-12 17:20:00",
    "body": "<p>Back in 2013 I made a small guitar for playing <a href=\"http://www.dwsk.co.uk/index_phase_shift.html\">Phase Shift</a> by cannibalizing a Wii Guitar Hero controller. It runs on an Atmega 32u4 and is housed in laser cut plywood and acrylic, and contains some (poorly utilized) Addressable LEDs.</p>\n\n<p>See below for pictures and the CAD file for the acrylic and Plywood cutouts files, as well as the source code that's currently running on it. This is a project I definitely want to revisit, by swapping out the 32u4 for a Teensy LC, adding many more addressable LEDs, and applying some of the knowledge of my <a href=\"/entry/iidx-deck-build-log-part-4\">IIDX deck lighting</a> to this old project, as my skill with Addressable LED animation has grown substantially since I made this little guitar. I'll probably also replace the sad, unfinished, plywood with some nice hardwood, Look forward to an update or two in the future as I rework this one.</p>\n\n<p><iframe allowfullscreen=\"\" frameborder=\"0\" height=\"315\" src=\"https://www.youtube.com/embed/JXWZUWZTGVw?rel=0\" width=\"560\"></iframe></p>",
    "image": {
      "file": "/files/phase_shift_guitar/2018-05-29-21.11.25.jpg"
    },
    "image_list": [
      {
        "filename": "/files/phase_shift_guitar/2018-05-29-21.11.28.jpg",
        "title": ""
      },
      {
        "filename": "/files/phase_shift_guitar/2018-05-29-21.11.45.jpg",
        "title": ""
      },
      {
        "filename": "/files/phase_shift_guitar/2018-05-29-21.12.02.jpg",
        "title": ""
      },
      {
        "filename": "/files/phase_shift_guitar/2018-05-29-21.11.54.jpg",
        "title": ""
      }
    ],
    "file_list": [
      {
        "filename": "/files/phase_shift_guitar/guitar.ino",
        "title": "guitar.ino"
      },
      {
        "filename": "/files/phase_shift_guitar/tiny-guitar-shells.dwg",
        "title": "tiny-guitar-shells.ino"
      }
    ]
  },
  {
    "id": "moving_tt_from_provo_to_orem",
    "title": "Moving tT from Provo to Orem",
    "date_publish": "2012-11-30 03:46:00",
    "body": "<p>In late 2012, we moved the Transistor from Provo to Orem. This has made a lot of people very angry and been widely regarded as a bad move. Here are some pictures from this time, including of the weird cat statue we glued to the ceiling before we left.</p>",
    "image": {
      "file": "/files/moving_tt_from_provo_to_orem/img-20121118-212428.jpg"
    },
    "image_list": [
      {
        "filename": "/files/moving_tt_from_provo_to_orem/img-20121118-212514.jpg",
        "title": ""
      },
      {
        "filename": "/files/moving_tt_from_provo_to_orem/1527652231_img-20121118-212428.jpg",
        "title": ""
      },
      {
        "filename": "/files/moving_tt_from_provo_to_orem/img-20121216-031713.jpg",
        "title": ""
      },
      {
        "filename": "/files/moving_tt_from_provo_to_orem/img-20121216-031742.jpg",
        "title": ""
      },
      {
        "filename": "/files/moving_tt_from_provo_to_orem/img-20121118-212526.jpg",
        "title": ""
      },
      {
        "filename": "/files/moving_tt_from_provo_to_orem/img-20121216-031648.jpg",
        "title": ""
      },
      {
        "filename": "/files/moving_tt_from_provo_to_orem/img-20121118-212503.jpg",
        "title": ""
      },
      {
        "filename": "/files/moving_tt_from_provo_to_orem/img-20121118-212436.jpg",
        "title": ""
      },
      {
        "filename": "/files/moving_tt_from_provo_to_orem/img-20121118-212405.jpg",
        "title": ""
      },
      {
        "filename": "/files/moving_tt_from_provo_to_orem/img-20121118-212358.jpg",
        "title": ""
      },
      {
        "filename": "/files/moving_tt_from_provo_to_orem/img-20121118-194439.jpg",
        "title": ""
      },
      {
        "filename": "/files/moving_tt_from_provo_to_orem/img-20121118-194453.jpg",
        "title": ""
      },
      {
        "filename": "/files/moving_tt_from_provo_to_orem/img-20121118-194428.jpg",
        "title": ""
      },
      {
        "filename": "/files/moving_tt_from_provo_to_orem/img-20121118-194336.jpg",
        "title": ""
      },
      {
        "filename": "/files/moving_tt_from_provo_to_orem/img-20121118-194301.jpg",
        "title": ""
      },
      {
        "filename": "/files/moving_tt_from_provo_to_orem/img-20121118-194407.jpg",
        "title": ""
      },
      {
        "filename": "/files/moving_tt_from_provo_to_orem/img-20121118-194236.jpg",
        "title": ""
      },
      {
        "filename": "/files/moving_tt_from_provo_to_orem/img-20121118-194246.jpg",
        "title": ""
      },
      {
        "filename": "/files/moving_tt_from_provo_to_orem/img-20121118-194359.jpg",
        "title": ""
      },
      {
        "filename": "/files/moving_tt_from_provo_to_orem/img-20121118-194501.jpg",
        "title": ""
      },
      {
        "filename": "/files/moving_tt_from_provo_to_orem/img-20121108-141435.jpg",
        "title": ""
      },
      {
        "filename": "/files/moving_tt_from_provo_to_orem/imag1293.jpg",
        "title": ""
      },
      {
        "filename": "/files/moving_tt_from_provo_to_orem/img-20121118-194323.jpg",
        "title": ""
      },
      {
        "filename": "/files/moving_tt_from_provo_to_orem/img-20121108-135016.jpg",
        "title": ""
      },
      {
        "filename": "/files/moving_tt_from_provo_to_orem/imag1289.jpg",
        "title": ""
      },
      {
        "filename": "/files/moving_tt_from_provo_to_orem/imag1288.jpg",
        "title": ""
      },
      {
        "filename": "/files/moving_tt_from_provo_to_orem/imag1290.jpg",
        "title": ""
      },
      {
        "filename": "/files/moving_tt_from_provo_to_orem/imag1284.jpg",
        "title": ""
      },
      {
        "filename": "/files/moving_tt_from_provo_to_orem/imag1283.jpg",
        "title": ""
      },
      {
        "filename": "/files/moving_tt_from_provo_to_orem/imag1285.jpg",
        "title": ""
      },
      {
        "filename": "/files/moving_tt_from_provo_to_orem/imag1286.jpg",
        "title": ""
      },
      {
        "filename": "/files/moving_tt_from_provo_to_orem/imag1292.jpg",
        "title": ""
      },
      {
        "filename": "/files/moving_tt_from_provo_to_orem/imag1287.jpg",
        "title": ""
      }
    ],
    "file_list": []
  },
  {
    "id": "4x4_keyboard_cases",
    "title": "4x4 Keyboard Cases",
    "date_publish": "2018-07-09 18:21:37",
    "body": "<p>My friend Marv was selling some 4x4 mechanical keyboard kits, and I drew up laser-cut acrylic cases for them. The first case is for the <a href=\"https://github.com/di0ib/Misc/tree/master/4x4\">original design</a> which used an arduino micro. This turned out to be a difficult-to-track-down MCU, and another friend dvdfreitag has made a <a href=\"https://github.com/dvdfreitag/4x4\">new version</a> which uses the much more readily available Pro Micro for the MCU.</p>\n\n<p>Marv posted a <a href=\"https://imgur.com/a/AZMbsBd\">build guide</a> for the keyboard. There are two case options in each dwg file. The first is a simple base plate and key alignment grid designed to be used with standoffs and remain open on the sides. The second is a box style case designed to be glued together once everything is working. It can also be used with 10mm standoffs so it can be disassembled for cleaning and maintenance, as long as the top is not glued down. In both cases, the acrylic top plate is used in place of the PCB top plate shown in marv's build guide. This is not technically necessary, but I think it looks better.</p>\n\n<p>The keyboards run on software generated at <a href=\"http://kbfirmware.com/\">kbfirmware.com</a> and the 4x4.json file below has the configuration for the 4x4 board's defaults using a 32u4. You can use the site to generate a hex file, and then upload it using the <a href=\"https://github.com/qmk/qmk_toolbox/releases\">qmk toolbox</a>.</p>",
    "image": {
      "file": "/files/4x4_keyboard_cases/1531160515_2018-07-08-17.26.06.jpg"
    },
    "image_list": [
      {
        "filename": "/files/4x4_keyboard_cases/2018-07-08-17.26.17.jpg",
        "title": ""
      },
      {
        "filename": "/files/4x4_keyboard_cases/2018-07-08-17.26.35.jpg",
        "title": ""
      }
    ],
    "file_list": [
      {
        "filename": "/files/4x4_keyboard_cases/4x4-keyboard-case.dwg",
        "title": "4x4-keyboard-case.dwg"
      },
      {
        "filename": "/files/4x4_keyboard_cases/dvdfreitag-4x4-keyboard-case.dwg",
        "title": "dvdfreitag-4x4-keyboard-case.dwg"
      },
      {
        "filename": "/files/4x4_keyboard_cases/4x4.json",
        "title": "4x4.json"
      }
    ]
  },
  {
    "id": "dovetail_utensil_box",
    "title": "Dovetail Utensil Box",
    "date_publish": "2013-12-03 09:42:00",
    "body": "<p>This is a dovetail box that I made for the purpose of holding utensils in my kitchen, such as large spoons, ladles, spatulas and the like. It was also to practice making hand-cut dovetails and finishing. The dovetails were all made with nothing more than a saw and chisels and a marking template I made as my first attempt at woodworking a few months back. I also made a tiny square to check them for square as I went. It’s not perfect, and I have some gaps and splitting on a couple of the joints, but all in all I’m happy with how it turned out as my first ‘real’ project (real in this case meaning ‘not a tool to be used to make other projects’).</p>\n\n<p>The cross beams are just half-lapped together with square notches cut into the sides for them to rest in (again with a saw and chisels). It’s all held together by wood glue, and only wood glue. The bottom was actually made from two boards that I jointed by hand and glued together, then I glued the whole thing to the sides. I’m not too worried about wood expansion, as it’s only 8” long, but hopefully it doesn’t pop off at some point down the road. If it does, I could always dowel it into the base and hope that’d hold better.</p>\n\n<p>I finished it with two coats of shellac that I mixed myself from flakes. It seems to have worked out well, despite a couple bumps I still need to sand off. This is also my first attempt at finishing a project. Sorry for the lack of progress photos. I didn’t have my phone on me while I was making most of this project. I’ll try to keep a better log on the next one. Lots of learning going on. Next stop: breadboard ended cutting board town.</p>",
    "image": {
      "file": "/files/dovetail_utensil_box/441303-438x.jpg"
    },
    "image_list": [
      {
        "filename": "/files/dovetail_utensil_box/441305-438x.jpg",
        "title": ""
      },
      {
        "filename": "/files/dovetail_utensil_box/441308-438x.jpg",
        "title": ""
      },
      {
        "filename": "/files/dovetail_utensil_box/441309-438x.jpg",
        "title": ""
      },
      {
        "filename": "/files/dovetail_utensil_box/441314-438x.jpg",
        "title": ""
      },
      {
        "filename": "/files/dovetail_utensil_box/441311-438x.jpg",
        "title": ""
      }
    ],
    "file_list": []
  },
  {
    "id": "making_video_game_controllers_with_teensy",
    "title": "Making Video Game Controllers with Teensy",
    "date_publish": "2019-03-22 13:45:09",
    "body": "<p>I recently taught a class about using Teensy as a USB game controller input for your computer. It's about an hour and a half of me rambling about how to connect various inputs, how to use the Teensy USB libraries, and going over example code. You can see the entire presentation as a video below, and I've attached the code examples from the <a href=\"https://github.com/kiyoshigawa/game_controller_code_examples\">github repo</a> here as well for download.</p>\n\n<p>To get the most out of this class, it is best to have a general familiarity with embedded C programming, or at least basic programming in general, as well as the ability to read basic electronic schematics (Here's a guide on schematics from Sparkfun: <a class=\"link\" href=\"https://learn.sparkfun.com/tutorials/how-to-read-a-schematic/\" target=\"__blank\" title=\"https://learn.sparkfun.com/tutorials/how-to-read-a-schematic/\">https://learn.sparkfun.com/tutorials/how-to-read-a-schematic/</a> ). Hamster ran two classes last year ( <a class=\"link\" href=\"https://www.youtube.com/watch?v=nslHeXYYATM\" target=\"__blank\" title=\"https://www.youtube.com/watch?v=nslHeXYYATM\">https://www.youtube.com/watch?v=nslHeXYYATM</a> and <a class=\"link\" href=\"https://www.youtube.com/watch?v=iAML97O8tHI\" target=\"__blank\" title=\"https://www.youtube.com/watch?v=iAML97O8tHI\">https://www.youtube.com/watch?v=iAML97O8tHI</a> ) that give a good overview of microcontroller firmware which are a good base of background knowledge used in this class. The code examples will be written for the Teensy, which is built on top of the Arduino IDE. The Teensy libraries are all open source (available on github: <a class=\"link\" href=\"https://github.com/PaulStoffregen/cores\" target=\"__blank\" title=\"https://github.com/PaulStoffregen/cores\">https://github.com/PaulStoffregen/cores</a> ), so you can modify them for any native USB capable microcontroller of your choice if you are so inclined.</p>\n\n<p><iframe allowfullscreen=\"\" frameborder=\"0\" height=\"315\" src=\"https://www.youtube.com/embed/FJM-tsYppKA\" width=\"560\"></iframe></p>",
    "image": {
      "file": "/files/making_video_game_controllers_with_teensy/2018-08-18-17.24.30.jpg"
    },
    "image_list": [],
    "file_list": [
      {
        "filename": "/files/making_video_game_controllers_with_teensy/making-video-game-controllers-with-teensy.zip",
        "title": "making-video-game-controllers-with-teensy-files.zip"
      }
    ]
  },
  {
    "id": "omiditone_-_part_1",
    "title": "oMIDItone - Part 1",
    "date_publish": "2018-12-20 14:06:00",
    "body": "<p>I recently received an Otamatone as a gift. I quickly found out I lack the training to accurately hit notes by ear. As a solution to my lack of skill, I decided to modify my Otamatone into a MIDI-controlled instrument. This is the story of my first attempt at doing so.</p>\n\n<p>My first step was to disassemble the device and figure out how to replace the soft-pot style potentiometer that controlled the device with a digital potentiometer of my own.This prooved to be pretty straight forward. I used a couple of digital potentiometers I had, as well as a solid state relay I had laying around to control when the sound was turned on and off, and adjust the resistance to the ~100k value range the original soft-pot had.</p>\n\n<p>In doing that, I was able to control the pitch, and get some sounds out of it by sending MIDI commands to a Teensy board. See video below for one of the earliest tests.</p>\n\n<p><iframe allowfullscreen=\"\" frameborder=\"0\" height=\"315\" src=\"https://www.youtube.com/embed/Q1Neo-n6_t0\" width=\"560\"></iframe></p>\n\n<p>Once I had basic MIDI control, I set out to map a resistance-to-pitch map so I could adjust to a specific resistance and get a specific pitch out reliably. It turns out that this was not going to work as I had envisioned. Not only were there some anaomolous spikes in output frequency, but the pitch mapped to specific resistances seemed to vary wildly depending on unknown variables (presumably temperature related, but it also seemed to be effected by the last notes played as well).</p>\n\n<p>You can see a graph of the anomolous pitch readings below in the images for the post. I tried adding jitter to the resistance, and having it randomly oscilate around a resistance, but the anomolous pitch changes were still present, and never in the same place twice when I ran tests. I decided that I would need to do more than just replace the soft-pot with digital pots, I would also need to read the frequency of the output sound, and be able to adjust towards a specific frequency on the fly.</p>\n\n<p>That led to me adding another two wires tied to the speaker outputs so I could measure the actual output frequency of the sound I was playing. Now that this was done, I was able to map the range of available frequencies on startup, adjust to the correct frequency quickly by starting at the closest resistance previously measured at that frequency, and shifting as needed. You'll find the code from my single oMIDItone below.</p>\n\n<p>You'll note that this is labeled part 1. Once I had basic functionality, and I was able to actually hit notes consistently, I realized that the range of the oMIDItone was limited to about one octave per each setting (Low, Mid, and High, controlled via switch on the back), and that if I was going to be able to play entire songs at once, I would need to control more than one. Part 2 of this series will cover my work on making a terrible circuit board that can control up to 6 of these oMIDItones with a Teensy LC, as well as making a class object that will run the oMIDItones and can be called via MIDI commands.</p>",
    "image": {
      "file": "/files/omiditone_-_part_1/2018-03-10-19.36.01.jpg"
    },
    "image_list": [
      {
        "filename": "/files/omiditone_-_part_1/2018-03-15-20.41.16.jpg",
        "title": "Original Board for a Single oMIDItone"
      },
      {
        "filename": "/files/omiditone_-_part_1/2018-12-20-15.02.48.jpg",
        "title": "Speaker Wire Connections - B Positive, BW GND."
      },
      {
        "filename": "/files/omiditone_-_part_1/2018-12-20-15.04.04.jpg",
        "title": "Soft Pot Replacement Connections - O Positive, OW Negative (I think)"
      },
      {
        "filename": "/files/omiditone_-_part_1/2018-12-20-15.01.34.jpg",
        "title": "Disassembled Circuit with Speaker and Battery Connections."
      },
      {
        "filename": "/files/omiditone_-_part_1/2019-03-23-07.41.06.jpg",
        "title": "Mostly Assembled oMIDItone with wire routing"
      },
      {
        "filename": "/files/omiditone_-_part_1/2019-03-23-07.44.03.jpg",
        "title": "Hot Glue for Strain Relief"
      },
      {
        "filename": "/files/omiditone_-_part_1/jitter-sample-chart.png",
        "title": "Jitter and Frequency Anomaly Chart"
      }
    ],
    "file_list": [
      {
        "filename": "/files/omiditone_-_part_1/omiditone.ino",
        "title": "oMIDItone.ino"
      }
    ]
  },
  {
    "id": "omiditone_-_part_2",
    "title": "oMIDItone - Part 2",
    "date_publish": "2019-05-10 20:56:03",
    "body": "<p>When last we visited the oMIDItone project, the plan was to turn the test code into a class, and add more heads to allow for a wider range of pitches to be played at once. Sounds simple enough, but it took a lot longer than I ever thought it would, with many complications and lessons along the way. I'll go over everything in roughly the order it happened in, starting with code challenges, then moving on to hardware challenges, and finally the (more or less) working prototype. Hold on to your hats, as this post is almost as long as it took me to build the damn thing.</p>\n\n<h2>Code:</h2>\n\n<p>Turning the code into a class turned out to be fairly straightforward, but did lead to some issues I didn't have with just one head. The first issue was that when storing an array of 32-bit microsecond note frequency values for every head, the Teensy LC's RAM is not large enough to run all 6 heads like I had planned. This would eventually necessitate the upgrade to a Teensy 3.2, but I didn't figure that out until after I had made a terrible PCB for the Teensy LC to run the 6-head design I was planning. More on that in the hardware section.</p>\n\n<p>Once the memory issues were out of the way and I could test with more than one head, it became apparent that I was having additional problems with using the original code as-is. What worked fine with one head running broke down with more than 3, especially at higher frequencies. The problem ended up being that my analog sampling using the default library was not fast enough. I found <a href=\"https://github.com/pedvide/ADC\">this awesome library</a> online, and was able to get the sampling rate up high enough to read all 6 heads at once without issue. This was done by lowering the sampling resolution to 8 bits from 12, and using the fastest settings the library offered.</p>\n\n<p>With the ADC sampling adequately, I was finally able to get all 6 heads to operate more or less properly at once. It was then that I noticed that the frequency sweep testing I was doing on boot wasn't accurately getting the final frequencies the notes would play at. This caused me no end of trouble, and I am just now getting it worked out properly at the time I am writing this blog post. Long story short, the frequency will take approximately 100 cycles to reach a stable tone for a given resistance, and I was measuring at somewhere between 5-10, which resulted in the notes skewing to a higher frequency than they should have been. You can see in the chart below labeled 'frequency stabilization testing' the testing that shows the steady lowering of frequency (more microseconds) as the number of cycles before testing increased. As I increased the number of cycles, the frequency would lower, until it finally stabilized around 20 tests (at 5 samples each, this adds up to 100 iterations), and after that it stopped varying as much.</p>\n\n<p>Now that all these issues were resolved, and the notes were playing correctly as soon as the startup_test() function was complete, I tackled deciding which MIDI notes to play. I settled on keeping track of when the MIDI notes were received, and checking the heads every time a note changed, then playing the most recently received notes first, and the oldest notes last. This final touch has made it so that the oMIDItone can actually play recognizable music straight from MIDI files. Depending on the file, it even sounds pretty good.</p>\n\n<h2>Hardware:</h2>\n\n<p>The hardware design for the oMIDItone has been quite the ordeal, and was riddled with uninformed decisions, and what should have been easily avoided mistakes. I'll pick up where I left off on the last post with the initial transition from a hand-soldered test board that could run a single head, to my initial PCB design for the 6-headed board. I will not be publishing the original 6-head board design, because it is flawed in so many ways I would feel bad putting it on the internet. I will be making a new control board incorporating all the things I have learned throughout the project up to this point, and when that is done I will post it as part 3 of this series.</p>\n\n<p>The first mistake I made on the oMIDItone control board was designing it for a Teensy LC instead of the 3.2 I would eventually need to use. This required me to do some pin jumping to get all the pins I needed available to the right locations, as even though the LC and 3.2 share most pin positions, there are still a few that don't line up, and I was already using all the LC pins for the first PCB design.</p>\n\n<p>The second mistake I made on the oMIDItone control board was to number the pins on the MCP4151 digital potentiometers I used incorrectly in Ki-CAD, which resulted in half of the pins being connected in reverse on the PCB I ordered. After a few tries at using 'spider chips' with long wires soldered to the pins of a DIP-8 package and flipped to plug into the board, I eventually had to design a replacement PCB that would flip the pins for me.</p>\n\n<p>The third problem with the board wasn't so much a mistake, as it was using something I had that was very much overkill for the intended purpose. I happened to have some large solid state relays around rated for 20A each, and I used them to control the ~130mA max current flow through the digital pots. This decision was made primarily because I had them on hand, but also because I had not yet taken the time to figure out exactly what the circuit inside an otamatone was doing, and I figured the SSRs would work regardless of the original circuiting. The end result was that the board was very bulky, and overdesigned with six $8-ish parts when it could have been made with a few &lt;$1 optoisolator chips instead.</p>\n\n<p>All of the above are the reasons why my first 6-head oMIDItone PCB is a bit of a disaster, and before I could even start testing the new code I had to deal with all of these issues. Once that was out of the way, I bought several new heads and hijacked the resistor and speaker pins and fed them back to the board. With this basic setup, I was able to get all the heads to play some sounds, and things seemed like they were heading towards functionality after all this time and fixing my bad hardware design decisions.</p>\n\n<p>After about 4 hours of testing and messing with the code, things started getting weird, and it turns out that the batteries in the otamatones were dying. I then realized that every time I used this thing, I was going to need to feed it twenty-four AAA batteries. That obviously wasn't sustainable, so I had to find a way to power the heads from a single source. This would require once again disassembling and rewiring a bunch of things to get it all to work.</p>\n\n<p>During the part of the project where I was tracking down where to connect batteries and testing power supplies, I discovered a couple important things about the otamatone circuit I had overlooked in my initial hardware design.</p>\n\n<ol>\n<li>The first was that between two of the batteries there was a thermal fuse that runs at ~1.5 Ohms until heated, when it will increase in resistance to prevent blowing out the transistors on the otamatone PCBs. I discovered this by bypassing the fuse unwittingly and blowing out a transistor on an otamatone PCB.</li>\n    <li>The second was that my power supply replacements (both battery and wall-transformers) were not able to maintain their voltage while running more than one head. This caused what I now understand to be a 'crosstalk' isue where other heads would chatter when, presumably, the voltage on the power supply was dropping altering the timing circuits on the other heads. I solved this problem by using a few 1000uF capacitiors to stabilize the supply. Though at the time it sounded like my alternative power supplies were overdriving the speaker causing it to crackle, so I spent a good deal of effort troubleshooting the wrong problem before I got to this solution.</li>\n</ol>\n<p>During this process of figuring out the power supply, and what was going wrong, I actually ended up fully reverse engineering the original otamatone circuit so I could see why I was frying things. The results of that are attached below as a sch Ki-CAD schematic file and as a pdf. This is, as far as I can tell, an accurate representation of the otamatone's original circuit, but I am not sure if I was able to accurately measure the capacitance values I have shown. I hope to revisit that some day and update things if I find my initial try was wrong. The capacitance coupled with the variable resistor (and some other fixed resistors on board) is responsible for the frequency of the output signal, so messing with the values will allow you to modify the circuit to generate different frequency ranges than the original hardware fi you're so inclined.</p>\n\n<p>Now armed with the knowledge of how the original circuit works (a push-pull RC transistor oscilator driving the speaker output transistors high and low) I was able to supply power to all 6 heads simultaneously and control them with the now-functional control board I had hacked together. I also took the step of completely removing the control boards and giving them 5-pin connectors so that I would be able to test things and work on them without disassembling the head. The heads now only contain the speaker and the two speaker wires for ease of use, but the sound is still generated entirely using the original circuitry.</p>\n\n<p>The current working prototype has a lot of wire connecting the otamatone control board, to the speaker wires in the head, to the power supply, and to the badly designed PCB control board I made with the Teensy and digital potentiometers. I plan to remove almost all of this extra wiring so that the control board will take the Teensy USB connection, a power supply connection, and output only the two speaker wires. I will also have 5-pin headers on the control PCB to plug in the original control boards, or possibly even control boards of my own design in the future. This will all be covered when I finish designing and building it in part 3 of this series.</p>\n\n<p>The last step that came about in getting the prototype to work was to add the ability to mute the heads during the boot-up sequence. I was hoping that I would be able to find a neat equation that would map close enough to the note frequencies that the bootup testing sequence would be unnecessary. Unfortunately after testing, the actual frequency response is not linear enough to be able to do that reliably, and it varies for every head. You can see the best-fit slope data for the heads in the chart below labeled 'Best Fit Chart'.</p>\n\n<p>Since replacing the bootup sequence programatically wasn't an option, and the values were volatile enough that I could not store them between boot cycles, I opted for adding a 1000 ohm dummy load in parallel with the speaker (and also with the volume limiting 10 ohm resistor you can see in the original schematic depending on where the power switch is set) and I added a switch to disconnect the speaker so it could measure the frequency without me having to hear it sound off every frequency every head can play. In the next revision of the board, i will add extra optoisolators so that this can be done in code instead of with the hardware switches.</p>\n\n<p>A final note for hardware: When I started I was using two 50k digital potentiometers to emulate the original 100k resistor strip that came with the otamatones. I have since switched to using a 100k and a 50k together, as it increases the range of MIDI notes that can be played by each head. With the original configuration, the notes between low, mid, and high ranges would often not be able to completely overlap, leaving a few notes that no head was able to play. By increasing the resistance, this extended the note range enough to mitigate this problem. Since I have a 50k in there, i oscilate it between steps 0 and 1 across every step of the range of the 100k pot and that allows me to maintain the same resolution for each step as I had before with two 50k digital pots.</p>\n\n<h2>Working Prototype:</h2>\n\n<p>Finally, after going through all that mess, I was able to get the thing programmed, handling MIDI notes reasonably well, and actually playing songs. See the video below for proof that this thing was (more or less) working at least once. The next hardware revision will be a nearly complete rebuild, so it may not work again for a while.</p>\n\n<p>\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/8_ChZsq1aDk\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n</p>\n\n<p>My next steps will be to redesign the PCB, using an I<sup>2</sup>C PCA9685 controller to control multiple servo motors that will allow me to actuate the mouths of the heads corresponding to MIDI note velocity. I'm also planning on adding hardware MIDI support in addition to USB MIDI, as well as a header for the ability to add addressable LED lighting to the project.</p>",
    "image": {
      "file": "/files/omiditone_-_part_2/back-traces-traced.png"
    },
    "image_list": [
      {
        "filename": "/files/omiditone_-_part_2/frequency-stabilization-testing.png",
        "title": "Frequency Stabilization Testing"
      },
      {
        "filename": "/files/omiditone_-_part_2/best-fit-chart.png",
        "title": "Best Fit Chart"
      },
      {
        "filename": "/files/omiditone_-_part_2/front-traces-traced.png",
        "title": "Front Traces Traced"
      }
    ],
    "file_list": [
      {
        "filename": "/files/omiditone_-_part_2/re-otamatone.sch",
        "title": "RE-otamatone.sch"
      },
      {
        "filename": "/files/omiditone_-_part_2/midi-note-handling-protocol-overview.txt",
        "title": "midi-note-handling-protocol-overview.txt"
      },
      {
        "filename": "/files/omiditone_-_part_2/1557528122_omiditone.h",
        "title": "oMIDItone.h"
      },
      {
        "filename": "/files/omiditone_-_part_2/omiditone.cpp",
        "title": "oMIDItone.cpp"
      },
      {
        "filename": "/files/omiditone_-_part_2/1557528122_omiditone.ino",
        "title": "oMIDItone.ino"
      },
      {
        "filename": "/files/omiditone_-_part_2/re-otamatone-schematic.pdf",
        "title": "RE-Otamatone-Schematic.pdf"
      }
    ]
  }
]
