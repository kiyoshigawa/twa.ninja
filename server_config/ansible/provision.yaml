---
- name: Initial Web Server Provisioning
  hosts: web
  remote_user: root

  tasks:

  - name: make .bashrc colorful and add ll alias
    copy:
      dest: ~/.bashrc
      content: |
        export LS_OPTIONS='--color=auto' 
        eval "$(dircolors)"
        alias ls='ls $LS_OPTIONS'
        alias ll='ls $LS_OPTIONS -laph'

  - name: Disallow SSH password authentication
    lineinfile:
      dest: /etc/ssh/sshd_config
      regexp: "^PasswordAuthentication"
      line: "PasswordAuthentication no"
      state: present
      validate: sshd -t -f %s

  - name: Restart sshd
    service:
      name: sshd
      state: restarted

  - name: Update and upgrade all apt packages
    apt:
      upgrade: yes
      update_cache: yes
      cache_valid_time: 86400 # One Day

  - name: Install various packages using apt
    apt:
      name:
        - ufw
        - git
        - vim
        - lsb-release
        - gnupg2
        - apt-transport-https
        - ca-certificates
        - software-properties-common
      state: latest

  - name: Setup ufw to allow ssh via port 22, but only from LAN network
    community.general.ufw:
      rule: allow
      port: 22
      from_ip: 192.168.1.1/24

  - name: Setup ufw to allow web server access via port 80
    community.general.ufw:
      rule: allow
      port: 80

  - name: Setup ufw to allow web server access via port 443
    community.general.ufw:
      rule: allow
      port: 443

  - name: Enable ufw firewall
    community.general.ufw:
      state: enabled
      default: deny

  - name: Add Docker GPG apt Key
    apt_key:
      url: "https://download.docker.com/linux/debian/gpg"
      state: present

  - name: Add Docker Repository
    apt_repository:
      repo: "deb https://download.docker.com/linux/debian bookworm stable"
      state: present
      update_cache: true

  - name: Update apt cache again now that docker repo is present
    apt:
      update_cache: yes

  - name: Install docker and docker-compose using apt
    apt:
      name:
        - docker
        - docker-compose
      state: latest

  - name: Download zola web installer
    ansible.builtin.get_url:
      url: https://github.com/barnumbirr/zola-debian/releases/download/v0.17.2-1/zola_0.17.2-1_amd64_bullseye.deb
      dest: ~/zola_installer.deb

  - name: Install zola SSB
    apt:
      deb: ~/zola_installer.deb

  - name: Clone Website Repository
    ansible.builtin.git:
      repo: https://github.com/kiyoshigawa/twa.ninja
      dest: ~/twa.ninja/

  - name: building website using zola
    ansible.builtin.command:
      chdir: ~/twa.ninja/website
      cmd: zola build

  - name: initialize letsencrypt certs using script
    command:
      cmd: ./init-letsencrypt.sh
      chdir: /root/twa.ninja/server_config/files/

  - name: start nginx server and certbot using docker-compose
    community.docker.docker_compose:
      project_src: /root/twa.ninja/server_config/files/
